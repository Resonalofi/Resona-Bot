from typing import Optional, Tuple, Union, List
# from emoji2pic import Emoji2Pic
from PIL import Image, ImageDraw, ImageFont

def create_text_image(
    text: str,
    font_path: str,
    font_size: int = 40,
    font_color: str = "black",
    padding: Tuple[int, int, int, int] = (20, 20, 20, 20),
    max_width: Optional[int] = None,
    line_spacing: Optional[int] = None,
    alignment: str = "left",
    include_footer: bool = True,
    footer_text: str = "Generated by Resona Bot",
    footer_font_size: int = 20,
    bg_color: str = "white",
) -> Image.Image:

    if alignment not in ["left", "center", "right"]:
        raise ValueError("Invalid alignment option. Choose from 'left', 'center', 'right'")

    font = ImageFont.truetype(font_path, font_size)
    footer_font = ImageFont.truetype(font_path, footer_font_size)

    def wrap_text(line: str, max_width: int):
        wrapped_lines = []
        current_line = ""
        for char in line:
            test_line = current_line + char
            bbox = font.getbbox(test_line)
            line_width = bbox[2] - bbox[0]
            if line_width <= max_width:
                current_line = test_line
            else:
                wrapped_lines.append(current_line)
                current_line = char
        if current_line:
            wrapped_lines.append(current_line)
        return wrapped_lines

    lines = []
    for line in text.split("\n"):
        if max_width:
            lines.extend(wrap_text(line, max_width))
        else:
            lines.append(line)

    line_spacing = line_spacing or font_size // 4
    text_width = max((font.getbbox(line)[2] - font.getbbox(line)[0]) for line in lines)
    text_height = sum((font.getbbox(line)[3] - font.getbbox(line)[1]) for line in lines) + (len(lines) - 1) * line_spacing
    footer_height = (footer_font.getbbox(footer_text)[3] - footer_font.getbbox(footer_text)[1]) if include_footer else 0
    image_width = text_width + footer_height +100
    image_height = text_height + footer_height + 50

    image = Image.new("RGBA", (image_width, image_height), bg_color)
    draw = ImageDraw.Draw(image)

    y = padding[0]
    for line in lines:
        line_bbox = font.getbbox(line)
        line_width = line_bbox[2] - line_bbox[0]
        line_height = line_bbox[3] - line_bbox[1]
        if alignment == "left":
            x = padding[3]
        elif alignment == "center":
            x = (image_width - line_width) // 2
        else:
            x = image_width - line_width - padding[1]
        draw.text((x, y), line, font=font, fill=font_color)
        y += line_height + line_spacing

    if include_footer:
       footer_bbox = footer_font.getbbox(footer_text)
       footer_width = footer_bbox[2] - footer_bbox[0]
       footer_height = footer_bbox[3] - footer_bbox[1]
       footer_x = image_width - footer_width - padding[3]  # 右下角，减去右侧padding
       footer_y = image_height - footer_height - padding[2]  # 右下角，减去底部padding
       draw.text((footer_x, footer_y), footer_text, font=footer_font, fill="#8888cc")
    #        # 调试辅助，绘制一个矩形框
    #    draw.rectangle(
    #     [(footer_x, footer_y), (footer_x + footer_width, footer_y + footer_height)],
    #     outline="red", width=1
    #     )

       
    return image